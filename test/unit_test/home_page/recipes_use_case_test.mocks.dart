// Mocks generated by Mockito 5.3.2 from annotations
// in spoonacular/test/unit_test/home_page/recipes_use_case_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:mockito/mockito.dart' as _i1;
import 'package:spoonacular/src/core/resource/data_state.dart' as _i3;
import 'package:spoonacular/src/data/datasource/remote/recipes_api_service.dart'
    as _i2;
import 'package:spoonacular/src/data/repository/recipes_repository.dart' as _i4;
import 'package:spoonacular/src/domain/entity/ingredients/ingredients_list_entity.dart'
    as _i7;
import 'package:spoonacular/src/domain/entity/recipes/recipe_entity.dart'
    as _i9;
import 'package:spoonacular/src/domain/entity/recipes/recipes_list_entity.dart'
    as _i6;
import 'package:spoonacular/src/domain/entity/similar_recipes/similar_recipes_entity.dart'
    as _i8;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeRecipesApiService_0 extends _i1.SmartFake
    implements _i2.RecipesApiService {
  _FakeRecipesApiService_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDataState_1<T> extends _i1.SmartFake implements _i3.DataState<T> {
  _FakeDataState_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [RecipesRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockRecipesRepository extends _i1.Mock implements _i4.RecipesRepository {
  MockRecipesRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.RecipesApiService get recipesApiService => (super.noSuchMethod(
        Invocation.getter(#recipesApiService),
        returnValue: _FakeRecipesApiService_0(
          this,
          Invocation.getter(#recipesApiService),
        ),
      ) as _i2.RecipesApiService);
  @override
  set recipesApiService(_i2.RecipesApiService? _recipesApiService) =>
      super.noSuchMethod(
        Invocation.setter(
          #recipesApiService,
          _recipesApiService,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i5.Future<_i3.DataState<_i6.RecipesListEntity>> getRecipesRandom() =>
      (super.noSuchMethod(
        Invocation.method(
          #getRecipesRandom,
          [],
        ),
        returnValue: _i5.Future<_i3.DataState<_i6.RecipesListEntity>>.value(
            _FakeDataState_1<_i6.RecipesListEntity>(
          this,
          Invocation.method(
            #getRecipesRandom,
            [],
          ),
        )),
      ) as _i5.Future<_i3.DataState<_i6.RecipesListEntity>>);
  @override
  _i5.Future<_i3.DataState<String>> getNutritionFacts({required int? id}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getNutritionFacts,
          [],
          {#id: id},
        ),
        returnValue:
            _i5.Future<_i3.DataState<String>>.value(_FakeDataState_1<String>(
          this,
          Invocation.method(
            #getNutritionFacts,
            [],
            {#id: id},
          ),
        )),
      ) as _i5.Future<_i3.DataState<String>>);
  @override
  _i5.Future<_i3.DataState<_i7.IngredientsListEntity>> getIngredients(
          {required int? id}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getIngredients,
          [],
          {#id: id},
        ),
        returnValue: _i5.Future<_i3.DataState<_i7.IngredientsListEntity>>.value(
            _FakeDataState_1<_i7.IngredientsListEntity>(
          this,
          Invocation.method(
            #getIngredients,
            [],
            {#id: id},
          ),
        )),
      ) as _i5.Future<_i3.DataState<_i7.IngredientsListEntity>>);
  @override
  _i5.Future<_i3.DataState<List<_i8.SimilarRecipesEntity>>> getSimilarRecipes(
          {required int? id}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSimilarRecipes,
          [],
          {#id: id},
        ),
        returnValue:
            _i5.Future<_i3.DataState<List<_i8.SimilarRecipesEntity>>>.value(
                _FakeDataState_1<List<_i8.SimilarRecipesEntity>>(
          this,
          Invocation.method(
            #getSimilarRecipes,
            [],
            {#id: id},
          ),
        )),
      ) as _i5.Future<_i3.DataState<List<_i8.SimilarRecipesEntity>>>);
  @override
  _i5.Future<_i3.DataState<_i9.RecipeEntity>> getRecipeId({required int? id}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getRecipeId,
          [],
          {#id: id},
        ),
        returnValue: _i5.Future<_i3.DataState<_i9.RecipeEntity>>.value(
            _FakeDataState_1<_i9.RecipeEntity>(
          this,
          Invocation.method(
            #getRecipeId,
            [],
            {#id: id},
          ),
        )),
      ) as _i5.Future<_i3.DataState<_i9.RecipeEntity>>);
}
